import React, { useEffect, useState } from "react";
import axios from "axios";
import AddUser from "./AddUser";

function UserList() {
  const [users, setUsers] = useState([]);
  // üëà TH√äM STATE ƒê·ªÇ QU·∫¢N L√ù VI·ªÜC S·ª¨A
  const [editingUser, setEditingUser] = useState(null); // L∆∞u th√¥ng tin user ƒëang ƒë∆∞·ª£c s·ª≠a
  const [updatedData, setUpdatedData] = useState({ name: "", email: "" }); // L∆∞u d·ªØ li·ªáu m·ªõi khi s·ª≠a

  const fetchUsers = async () => {
    try {
      const res = await axios.get("/users");
      setUsers(res.data);
    } catch (err) {
      console.error("L·ªói khi l·∫•y danh s√°ch:", err);
    }
  };

  useEffect(() => {
    fetchUsers();
  }, []);

  // üëà TH√äM C√ÅC H√ÄM X·ª¨ L√ù S·ª¨A V√Ä X√ìA
  // 1. X·ª≠ l√Ω s·ª± ki·ªán X√≥a
  const handleDelete = async (id) => {
    if (window.confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a ng∆∞·ªùi d√πng n√†y?")) {
      try {
        await axios.delete(`/users/${id}`); // D√πng ƒë∆∞·ªùng d·∫´n t∆∞∆°ng ƒë·ªëi
        fetchUsers(); // T·∫£i l·∫°i danh s√°ch ng∆∞·ªùi d√πng
        alert("X√≥a ng∆∞·ªùi d√πng th√†nh c√¥ng!");
      } catch (error) {
        console.error("L·ªói khi x√≥a ng∆∞·ªùi d√πng:", error);
        alert("C√≥ l·ªói x·∫£y ra khi x√≥a ng∆∞·ªùi d√πng.");
      }
    }
  };

  // 2. X·ª≠ l√Ω s·ª± ki·ªán khi b·∫•m n√∫t "S·ª≠a"
  const handleEdit = (user) => {
    setEditingUser(user);
    setUpdatedData({ name: user.name, email: user.email });
  };

  // 3. X·ª≠ l√Ω s·ª± ki·ªán khi b·∫•m n√∫t "L∆∞u" (C·∫≠p nh·∫≠t)
  const handleUpdate = async () => {
    try {
      await axios.put(`/users/${editingUser._id}`, updatedData);
      fetchUsers(); // T·∫£i l·∫°i danh s√°ch
      setEditingUser(null); // Tho√°t kh·ªèi ch·∫ø ƒë·ªô s·ª≠a
      alert("C·∫≠p nh·∫≠t ng∆∞·ªùi d√πng th√†nh c√¥ng!");
    } catch (error) {
      console.error("L·ªói khi c·∫≠p nh·∫≠t ng∆∞·ªùi d√πng:", error);
      alert("C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t ng∆∞·ªùi d√πng.");
    }
  };

  // 4. X·ª≠ l√Ω s·ª± ki·ªán khi b·∫•m n√∫t "H·ªßy"
  const handleCancelEdit = () => {
    setEditingUser(null);
  };

  return (
    <div>
      <AddUser onUserAdded={fetchUsers} />
      <h2>Danh s√°ch ng∆∞·ªùi d√πng</h2>
      <ul>
        {/* üëá C·∫¨P NH·∫¨T GIAO DI·ªÜN HI·ªÇN TH·ªä C√ì ƒêI·ªÄU KI·ªÜN */}
        {users.map((user) => (
          <li key={user._id} style={{ marginBottom: '10px', display: 'flex', alignItems: 'center' }}>
            {editingUser?._id === user._id ? (
              // Ch·∫ø ƒë·ªô S·ª¨A
              <>
                <input
                  type="text"
                  value={updatedData.name}
                  onChange={(e) => setUpdatedData({ ...updatedData, name: e.target.value })}
                />
                <input
                  type="email"
                  value={updatedData.email}
                  onChange={(e) => setUpdatedData({ ...updatedData, email: e.target.value })}
                  style={{ marginLeft: '10px' }}
                />
                <button onClick={handleUpdate} style={{ marginLeft: '10px' }}>L∆∞u</button>
                <button onClick={handleCancelEdit}>H·ªßy</button>
              </>
            ) : (
              // Ch·∫ø ƒë·ªô HI·ªÇN TH·ªä
              <>
                <div style={{ flex: 1 }}>
                  <strong>{user.name}</strong> - {user.email}
                </div>
                <button onClick={() => handleEdit(user)}>S·ª≠a</button>
                <button onClick={() => handleDelete(user._id)} style={{ marginLeft: '5px' }}>X√≥a</button>
              </>
            )}
          </li>
        ))}
      </ul>
    </div>
  );
}

export default UserList;