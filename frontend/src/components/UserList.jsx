import React, { useEffect, useState } from "react";
import axios from "axios";

function UserList() {
  const [users, setUsers] = useState([]);
  const [editUser, setEditUser] = useState(null); // l∆∞u user ƒëang s·ª≠a
  const [updatedData, setUpdatedData] = useState({ name: "", email: "" });

  // L·∫•y danh s√°ch user khi load trang
  useEffect(() => {
    axios
      .get("http://localhost:3001/users")
      .then((res) => setUsers(res.data))
      .catch((err) => console.error(err));
  }, []);

  // üßπ X√≥a user
  const handleDelete = async (id) => {
    if (!window.confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a user n√†y kh√¥ng?")) return;
    try {
      await axios.delete(`http://localhost:3001/users/${id}`);
      setUsers(users.filter((user) => user.id !== id));
      alert("üóëÔ∏è X√≥a user th√†nh c√¥ng!");
    } catch (error) {
      alert("‚ùå L·ªói khi x√≥a user!");
      console.error(error);
    }
  };

  // ‚úèÔ∏è Ch·ªçn user ƒë·ªÉ s·ª≠a
  const handleEdit = (user) => {
    setEditUser(user);
    setUpdatedData({ name: user.name, email: user.email });
  };

  // üíæ G·ª≠i PUT request c·∫≠p nh·∫≠t user
  const handleUpdate = async () => {
    try {
      await axios.put(`http://localhost:3001/users/${editUser.id}`, updatedData);
      setUsers(
        users.map((u) =>
          u.id === editUser.id ? { ...u, ...updatedData } : u
        )
      );
      setEditUser(null);
      alert("‚úÖ C·∫≠p nh·∫≠t user th√†nh c√¥ng!");
    } catch (error) {
      alert("‚ùå L·ªói khi c·∫≠p nh·∫≠t user!");
      console.error(error);
    }
  };

  return (
    <div>
      <h2>Danh s√°ch ng∆∞·ªùi d√πng</h2>
      <ul>
        {users.map((user) => (
          <li key={user.id}>
            {editUser?.id === user.id ? (
              <>
                <input
                  type="text"
                  value={updatedData.name}
                  onChange={(e) =>
                    setUpdatedData({ ...updatedData, name: e.target.value })
                  }
                />
                <input
                  type="email"
                  value={updatedData.email}
                  onChange={(e) =>
                    setUpdatedData({ ...updatedData, email: e.target.value })
                  }
                />
                <button onClick={handleUpdate}>L∆∞u</button>
                <button onClick={() => setEditUser(null)}>H·ªßy</button>
              </>
            ) : (
              <>
                {user.name} - {user.email}
                <button onClick={() => handleEdit(user)}>S·ª≠a</button>
                <button onClick={() => handleDelete(user.id)}>X√≥a</button>
              </>
            )}
          </li>
        ))}
      </ul>
    </div>
  );
}

export default UserList;
